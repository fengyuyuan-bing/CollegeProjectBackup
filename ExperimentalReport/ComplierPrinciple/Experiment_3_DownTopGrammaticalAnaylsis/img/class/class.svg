<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1032.287px" preserveAspectRatio="none" style="width:992px;height:1032px;" version="1.1" viewBox="0 0 992 1032" width="992.8251px" zoomAndPan="magnify"><defs><filter height="300%" id="f97afrxdsupjo" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="1.7937219730941705"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="3.587443946188341" dy="3.587443946188341" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[14206c5a513f4f95fcbd1ec2f195129c]
class symbols--><rect fill="#FEFECE" filter="url(#f97afrxdsupjo)" height="77.5014" id="symbols" style="stroke: #A80036; stroke-width: 1.345291479820628;" width="194.6188" x="398.6547" y="242.1525"/><ellipse cx="469.2825" cy="256.5022" fill="#ADD1B2" rx="9.8655" ry="9.8655" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><path d="M471.3845,252.6205 C470.5437,252.2281 470.0112,252.102 469.2265,252.102 C466.8722,252.102 465.0785,253.9658 465.0785,256.4041 L465.0785,257.4131 C465.0785,259.7253 466.9703,261.421 469.5628,261.421 C470.6558,261.421 471.6928,261.1547 472.3655,260.6642 C472.884,260.2999 473.1783,259.8935 473.1783,259.5432 C473.1783,259.1368 472.8279,258.7864 472.4075,258.7864 C472.2113,258.7864 472.0291,258.8565 471.861,259.0247 C471.4546,259.4591 471.4546,259.4591 471.2864,259.5432 C470.9081,259.7814 470.2915,259.8935 469.6048,259.8935 C467.7691,259.8935 466.6059,258.9126 466.6059,257.3851 L466.6059,256.4041 C466.6059,254.8066 467.727,253.6295 469.2825,253.6295 C469.801,253.6295 470.3475,253.7696 470.7679,253.9938 C471.2024,254.2461 471.3565,254.4423 471.4406,254.8066 C471.4966,255.171 471.5247,255.2831 471.6508,255.3952 C471.7769,255.5213 471.9871,255.6194 472.1833,255.6194 C472.4215,255.6194 472.6598,255.4933 472.8139,255.2971 C472.912,255.157 472.94,254.9888 472.94,254.6104 L472.94,253.3352 C472.94,252.9428 472.926,252.8307 472.8419,252.6906 C472.7018,252.4524 472.4496,252.3262 472.1833,252.3262 C471.917,252.3262 471.7349,252.4103 471.5387,252.6906 L471.3845,252.6205 Z "/><text fill="#000000" font-family="sans-serif" font-size="10.7623" lengthAdjust="spacingAndGlyphs" textLength="45.7399" x="487.6682" y="260.2281">symbols</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="399.5516" x2="592.3767" y1="270.852" y2="270.852"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="128.2511" x="404.0359" y="283.5968">终结符和非终结符组成的符号</text><line style="stroke: #A80036; stroke-width: 0.8968609865470852; stroke-dasharray: 1.0,2.0;" x1="399.5516" x2="592.3767" y1="289.5109" y2="289.5109"/><ellipse cx="408.5202" cy="299.3764" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="171.3004" x="416.5919" y="302.2557">getClassName(): virtual std::string</text><ellipse cx="408.5202" cy="310.8604" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="92.3767" x="416.5919" y="313.7398">print(): virtual void</text><!--MD5=[60cc1c2bd56641e618da5c20b30275a6]
class symbolsVT--><rect fill="#FEFECE" filter="url(#f97afrxdsupjo)" height="134.9215" id="symbolsVT" style="stroke: #A80036; stroke-width: 1.345291479820628;" width="254.7085" x="106.7265" y="30.4933"/><ellipse cx="200.6726" cy="44.843" fill="#ADD1B2" rx="9.8655" ry="9.8655" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><path d="M202.7747,40.9613 C201.9339,40.5689 201.4013,40.4428 200.6166,40.4428 C198.2623,40.4428 196.4686,42.3066 196.4686,44.745 L196.4686,45.7539 C196.4686,48.0661 198.3604,49.7618 200.9529,49.7618 C202.046,49.7618 203.083,49.4955 203.7556,49.005 C204.2741,48.6407 204.5684,48.2343 204.5684,47.884 C204.5684,47.4776 204.218,47.1272 203.7976,47.1272 C203.6015,47.1272 203.4193,47.1973 203.2511,47.3655 C202.8447,47.7999 202.8447,47.7999 202.6766,47.884 C202.2982,48.1222 201.6816,48.2343 200.995,48.2343 C199.1592,48.2343 197.9961,47.2534 197.9961,45.7259 L197.9961,44.745 C197.9961,43.1474 199.1172,41.9703 200.6726,41.9703 C201.1911,41.9703 201.7377,42.1104 202.1581,42.3346 C202.5925,42.5869 202.7466,42.7831 202.8307,43.1474 C202.8868,43.5118 202.9148,43.6239 203.0409,43.736 C203.167,43.8621 203.3772,43.9602 203.5734,43.9602 C203.8117,43.9602 204.0499,43.8341 204.204,43.6379 C204.3021,43.4978 204.3302,43.3296 204.3302,42.9512 L204.3302,41.676 C204.3302,41.2836 204.3161,41.1715 204.2321,41.0314 C204.0919,40.7932 203.8397,40.667 203.5734,40.667 C203.3072,40.667 203.125,40.7511 202.9288,41.0314 L202.7747,40.9613 Z "/><text fill="#000000" font-family="sans-serif" font-size="10.7623" lengthAdjust="spacingAndGlyphs" textLength="59.1928" x="219.0583" y="48.5689">symbolsVT</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="107.6233" x2="360.5381" y1="59.1928" y2="59.1928"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="29.5964" x="112.1076" y="71.9376">终结符</text><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="138.1166" x="112.1076" y="83.4216">终结符由终结符的值和编码构成</text><line style="stroke: #A80036; stroke-width: 0.8968609865470852; stroke-dasharray: 1.0,2.0;" x1="107.6233" x2="360.5381" y1="89.3358" y2="89.3358"/><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="113.9013" y="96.5107"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="131.8386" x="124.6637" y="102.0806">word: std::string 终结符的值</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="113.9013" y="107.9947"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="231.3901" x="124.6637" y="113.5646">code: std::string 词法分析后终结符的标识（编码）</text><ellipse cx="116.5919" cy="122.1693" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="171.3004" x="124.6637" y="125.0486">getClassName(): virtual std::string</text><ellipse cx="116.5919" cy="133.6533" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="104.9327" x="124.6637" y="136.5326">getWord(): std::string</text><ellipse cx="116.5919" cy="145.1373" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="105.8296" x="124.6637" y="148.0167">getCode(): std::string</text><ellipse cx="116.5919" cy="156.6214" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="57.3991" x="124.6637" y="159.5007">print(): void</text><!--MD5=[863fa5218c522b12d482362076ef1ce2]
class symbolsVN--><rect fill="#FEFECE" filter="url(#f97afrxdsupjo)" height="180.8576" id="symbolsVN" style="stroke: #A80036; stroke-width: 1.345291479820628;" width="301.3453" x="561.435" y="7.1749"/><ellipse cx="678.2511" cy="21.5247" fill="#ADD1B2" rx="9.8655" ry="9.8655" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><path d="M680.3531,17.6429 C679.5123,17.2506 678.9798,17.1244 678.1951,17.1244 C675.8408,17.1244 674.0471,18.9882 674.0471,21.4266 L674.0471,22.4355 C674.0471,24.7478 675.9389,26.4434 678.5314,26.4434 C679.6244,26.4434 680.6614,26.1771 681.3341,25.6867 C681.8526,25.3223 682.1469,24.9159 682.1469,24.5656 C682.1469,24.1592 681.7965,23.8089 681.3761,23.8089 C681.1799,23.8089 680.9978,23.8789 680.8296,24.0471 C680.4232,24.4815 680.4232,24.4815 680.255,24.5656 C679.8767,24.8038 679.2601,24.9159 678.5734,24.9159 C676.7377,24.9159 675.5746,23.935 675.5746,22.4075 L675.5746,21.4266 C675.5746,19.829 676.6956,18.6519 678.2511,18.6519 C678.7696,18.6519 679.3161,18.792 679.7365,19.0163 C680.171,19.2685 680.3251,19.4647 680.4092,19.829 C680.4652,20.1934 680.4933,20.3055 680.6194,20.4176 C680.7455,20.5437 680.9557,20.6418 681.1519,20.6418 C681.3901,20.6418 681.6284,20.5157 681.7825,20.3195 C681.8806,20.1794 681.9086,20.0112 681.9086,19.6328 L681.9086,18.3576 C681.9086,17.9652 681.8946,17.8531 681.8105,17.713 C681.6704,17.4748 681.4182,17.3487 681.1519,17.3487 C680.8857,17.3487 680.7035,17.4327 680.5073,17.713 L680.3531,17.6429 Z "/><text fill="#000000" font-family="sans-serif" font-size="10.7623" lengthAdjust="spacingAndGlyphs" textLength="60.0897" x="696.6368" y="25.2505">symbolsVN</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="562.3318" x2="861.8834" y1="35.8744" y2="35.8744"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="39.4619" x="566.8161" y="48.6192">非终结符</text><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="246.6368" x="566.8161" y="60.1033">非终结符由其左部的非终结符和有部一个一些产生式构成</text><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="266.3677" x="566.8161" y="71.5873">产生式即为一些符号的排列，此处存储的是一些产生式的指针</text><line style="stroke: #A80036; stroke-width: 0.8968609865470852; stroke-dasharray: 1.0,2.0;" x1="562.3318" x2="861.8834" y1="77.5014" y2="77.5014"/><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="568.6099" y="84.6763"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="173.991" x="579.3722" y="90.2462">name: std::string 非终结符左部名称X</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="568.6099" y="96.1603"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="186.5471" x="579.3722" y="101.7302">p[maxnNum]: production * 产生式集合</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="568.6099" y="107.6443"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="97.7578" x="579.3722" y="113.2142">num: int  产生式个数</text><ellipse cx="571.3004" cy="121.8189" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="136.3229" x="579.3722" y="124.6983">getClassName(): std::string</text><ellipse cx="571.3004" cy="133.303" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="109.417" x="579.3722" y="136.1823">getName(): std::string</text><ellipse cx="571.3004" cy="144.787" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="278.0269" x="579.3722" y="147.6663">insertProduction(production *newp): void 加入一个产生式</text><ellipse cx="571.3004" cy="156.271" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="275.3363" x="579.3722" y="159.1503">getProductionIndexOf(int i): production* 获得第i个产生式</text><ellipse cx="571.3004" cy="167.755" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="173.991" x="579.3722" y="170.6344">getAllProduction(): 获得所有的产生式</text><ellipse cx="571.3004" cy="179.2391" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="57.3991" x="579.3722" y="182.1184">print(): void</text><!--MD5=[ca8828f629060c71aeac5c994a5a852f]
class production--><rect fill="#FEFECE" filter="url(#f97afrxdsupjo)" height="157.8896" id="production" style="stroke: #A80036; stroke-width: 1.345291479820628;" width="427.8027" x="282.0628" y="373.0942"/><ellipse cx="463.0045" cy="387.4439" fill="#ADD1B2" rx="9.8655" ry="9.8655" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><path d="M465.1065,383.5622 C464.2657,383.1698 463.7332,383.0437 462.9484,383.0437 C460.5942,383.0437 458.8004,384.9075 458.8004,387.3459 L458.8004,388.3548 C458.8004,390.667 460.6923,392.3627 463.2848,392.3627 C464.3778,392.3627 465.4148,392.0964 466.0874,391.6059 C466.6059,391.2416 466.9002,390.8352 466.9002,390.4849 C466.9002,390.0785 466.5499,389.7281 466.1295,389.7281 C465.9333,389.7281 465.7511,389.7982 465.583,389.9664 C465.1766,390.4008 465.1766,390.4008 465.0084,390.4849 C464.63,390.7231 464.0135,390.8352 463.3268,390.8352 C461.491,390.8352 460.3279,389.8543 460.3279,388.3268 L460.3279,387.3459 C460.3279,385.7483 461.449,384.5712 463.0045,384.5712 C463.523,384.5712 464.0695,384.7113 464.4899,384.9355 C464.9243,385.1878 465.0785,385.384 465.1626,385.7483 C465.2186,386.1127 465.2466,386.2248 465.3728,386.3369 C465.4989,386.463 465.7091,386.5611 465.9053,386.5611 C466.1435,386.5611 466.3817,386.435 466.5359,386.2388 C466.634,386.0987 466.662,385.9305 466.662,385.5521 L466.662,384.2769 C466.662,383.8845 466.648,383.7724 466.5639,383.6323 C466.4238,383.3941 466.1715,383.2679 465.9053,383.2679 C465.639,383.2679 465.4568,383.352 465.2607,383.6323 L465.1065,383.5622 Z "/><text fill="#000000" font-family="sans-serif" font-size="10.7623" lengthAdjust="spacingAndGlyphs" textLength="58.296" x="481.3901" y="391.1698">production</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="282.9596" x2="708.9686" y1="401.7937" y2="401.7937"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="29.5964" x="287.4439" y="414.5385">产生式</text><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="266.3677" x="287.4439" y="426.0225">一个产生式由一个左部的非终结符和一些右部的符号集合构成</text><line style="stroke: #A80036; stroke-width: 0.8968609865470852; stroke-dasharray: 1.0,2.0;" x1="282.9596" x2="708.9686" y1="431.9367" y2="431.9367"/><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="289.2377" y="439.1115"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="186.5471" x="300" y="444.6815">vn: symbolsVN * 产生式左部的非终结符</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="289.2377" y="450.5956"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="404.4843" x="300" y="456.1655">pro[maxnLen]: symbols* 产生式，由一些非终结符和终结符构成，故使用符号指针来指引</text><ellipse cx="291.9283" cy="464.7702" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="267.2646" x="300" y="467.6495">push_back(symbols *a): void 为产生式后部插入一个符号</text><ellipse cx="291.9283" cy="476.2542" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="208.9686" x="300" y="479.1335">getVN(): symbolsVN* 获得左部非终结符符号</text><ellipse cx="291.9283" cy="487.7382" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="227.8027" x="300" y="490.6176">getProduction(): symbols** 获得产生式指针数组</text><ellipse cx="291.9283" cy="499.2223" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="134.5291" x="300" y="502.1016">getLen(): int 获得产生式长度</text><ellipse cx="291.9283" cy="510.7063" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="323.7668" x="300" y="513.5856">getProductionIndexOf(int i): symbols* 获得产生式中第i个位置的符号</text><ellipse cx="291.9283" cy="522.1903" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="57.3991" x="300" y="525.0696">print(): void</text><!--MD5=[964012e3a2694457aad972850207b25a]
class analysisTable--><rect fill="#FEFECE" filter="url(#f97afrxdsupjo)" height="192.3416" id="analysisTable" style="stroke: #A80036; stroke-width: 1.345291479820628;" width="384.7534" x="303.5874" y="584.7534"/><ellipse cx="455.8296" cy="599.1031" fill="#ADD1B2" rx="9.8655" ry="9.8655" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><path d="M457.9316,595.2214 C457.0908,594.829 456.5583,594.7029 455.7735,594.7029 C453.4193,594.7029 451.6256,596.5667 451.6256,599.005 L451.6256,600.014 C451.6256,602.3262 453.5174,604.0219 456.1099,604.0219 C457.2029,604.0219 458.2399,603.7556 458.9126,603.2651 C459.4311,602.9008 459.7253,602.4944 459.7253,602.1441 C459.7253,601.7377 459.375,601.3873 458.9546,601.3873 C458.7584,601.3873 458.5762,601.4574 458.4081,601.6256 C458.0017,602.06 458.0017,602.06 457.8335,602.1441 C457.4552,602.3823 456.8386,602.4944 456.1519,602.4944 C454.3161,602.4944 453.153,601.5135 453.153,599.986 L453.153,599.005 C453.153,597.4075 454.2741,596.2304 455.8296,596.2304 C456.3481,596.2304 456.8946,596.3705 457.315,596.5947 C457.7494,596.847 457.9036,597.0432 457.9877,597.4075 C458.0437,597.7719 458.0717,597.884 458.1979,597.9961 C458.324,598.1222 458.5342,598.2203 458.7304,598.2203 C458.9686,598.2203 459.2068,598.0942 459.361,597.898 C459.4591,597.7578 459.4871,597.5897 459.4871,597.2113 L459.4871,595.9361 C459.4871,595.5437 459.4731,595.4316 459.389,595.2915 C459.2489,595.0533 458.9966,594.9271 458.7304,594.9271 C458.4641,594.9271 458.282,595.0112 458.0858,595.2915 L457.9316,595.2214 Z "/><text fill="#000000" font-family="sans-serif" font-size="10.7623" lengthAdjust="spacingAndGlyphs" textLength="72.6457" x="474.2152" y="602.829">analysisTable</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="304.4843" x2="687.4439" y1="613.4529" y2="613.4529"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="29.5964" x="308.9686" y="626.1977">分析表</text><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="128.2511" x="308.9686" y="637.6817">由ACTION表和GOTO表组成</text><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="166.8161" x="308.9686" y="649.1658">由前期的分析得到该文法的SLR分析表</text><line style="stroke: #A80036; stroke-width: 0.8968609865470852; stroke-dasharray: 1.0,2.0;" x1="304.4843" x2="687.4439" y1="655.0799" y2="655.0799"/><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="310.7623" y="662.2548"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="164.1256" x="321.5247" y="667.8247">ACTION: ACTIONTable ACTION表</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="310.7623" y="673.7388"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="139.9103" x="321.5247" y="679.3087">GOTO: GOTOTable GOTO表</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="310.7623" y="685.2228"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="134.5291" x="321.5247" y="690.7927">numofstate: int 状态个数I_n</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="310.7623" y="696.7068"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="361.435" x="321.5247" y="702.2767">productions[NUMOFPRODUCTIONS]: production* 产生式数组，下标即为编号</text><ellipse cx="313.4529" cy="710.8814" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="217.9372" x="321.5247" y="713.7608">insertSymbols(symbols*): void 插入一个符号</text><ellipse cx="313.4529" cy="722.3655" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="305.8296" x="321.5247" y="725.2448">insertProduction(production* p): void 插入一条产生式，自动编号</text><ellipse cx="313.4529" cy="733.8495" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="234.9776" x="321.5247" y="736.7288">getProduction(int i): production* 获得第i条产生式</text><ellipse cx="313.4529" cy="745.3335" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="346.1883" x="321.5247" y="748.2128">insert(int state, symbols* s, char ch, int numOfPro): void 插入一个状态</text><ellipse cx="313.4529" cy="756.8175" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="294.1704" x="321.5247" y="759.6969">get(int state, symbols* s): std::pair&lt;char, int&gt; 获得一个状态</text><ellipse cx="313.4529" cy="768.3016" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="57.3991" x="321.5247" y="771.1809">print(): void</text><!--MD5=[c9455626be53c03637fd2cef487c61ac]
class ACTIONTable--><rect fill="#FEFECE" filter="url(#f97afrxdsupjo)" height="192.3416" id="ACTIONTable" style="stroke: #A80036; stroke-width: 1.345291479820628;" width="496.861" x="5.3812" y="830.4933"/><ellipse cx="215.4709" cy="844.843" fill="#ADD1B2" rx="9.8655" ry="9.8655" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><path d="M217.5729,840.9613 C216.7321,840.5689 216.1996,840.4428 215.4148,840.4428 C213.0605,840.4428 211.2668,842.3066 211.2668,844.745 L211.2668,845.7539 C211.2668,848.0661 213.1586,849.7618 215.7511,849.7618 C216.8442,849.7618 217.8812,849.4955 218.5538,849.005 C219.0723,848.6407 219.3666,848.2343 219.3666,847.884 C219.3666,847.4776 219.0163,847.1272 218.5959,847.1272 C218.3997,847.1272 218.2175,847.1973 218.0493,847.3655 C217.6429,847.7999 217.6429,847.7999 217.4748,847.884 C217.0964,848.1222 216.4798,848.2343 215.7932,848.2343 C213.9574,848.2343 212.7943,847.2534 212.7943,845.7259 L212.7943,844.745 C212.7943,843.1474 213.9154,841.9703 215.4709,841.9703 C215.9893,841.9703 216.5359,842.1104 216.9563,842.3346 C217.3907,842.5869 217.5448,842.7831 217.6289,843.1474 C217.685,843.5118 217.713,843.6239 217.8391,843.736 C217.9652,843.8621 218.1754,843.9602 218.3716,843.9602 C218.6099,843.9602 218.8481,843.8341 219.0022,843.6379 C219.1003,843.4978 219.1284,843.3296 219.1284,842.9512 L219.1284,841.676 C219.1284,841.2836 219.1143,841.1715 219.0303,841.0314 C218.8901,840.7932 218.6379,840.667 218.3716,840.667 C218.1054,840.667 217.9232,840.7511 217.727,841.0314 L217.5729,840.9613 Z "/><text fill="#000000" font-family="sans-serif" font-size="10.7623" lengthAdjust="spacingAndGlyphs" textLength="69.0583" x="233.8565" y="848.5689">ACTIONTable</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="6.278" x2="501.3453" y1="859.1928" y2="859.1928"/><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="12.5561" y="866.3677"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="473.5426" x="23.3184" y="871.9376">ACTION[NUMOFSTATE][NUMOFVT]: std::pair&lt;char, int&gt; ACTION表，四种构成： s_i, r_i, acc, err，</text><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="226.9058" x="23.3184" y="883.4216">分别表示移进状态、规约状态、接受状态和错误状态</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="12.5561" y="889.3358"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="178.4753" x="23.3184" y="894.9057">numofstate: int ACTION表状态的数量</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="12.5561" y="900.8198"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="214.3498" x="23.3184" y="906.3897">numofsymbolsvt: int ACTION表终结符的数量</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="12.5561" y="912.3038"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="309.417" x="23.3184" y="917.8737">vtmap: std::map&lt;symbolsVT*, int&gt; 终结符对应在分析表中的位置</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="6.278" x2="501.3453" y1="923.7878" y2="923.7878"/><rect fill="#F24D5C" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="12.5561" y="930.9627"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="240.3587" x="23.3184" y="936.5326">getVTMap(symbolsVT*): int 获得终结符对应的编号</text><ellipse cx="15.2466" cy="945.1373" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="218.8341" x="23.3184" y="948.0167">setNumOfState(int): void 设置表的状态的数量</text><ellipse cx="15.2466" cy="956.6214" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="309.417" x="23.3184" y="959.5007">insertVT(symbolsVT*): void 插入一个终结符以及给一个对应的编号</text><ellipse cx="15.2466" cy="968.1054" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="369.5067" x="23.3184" y="970.9847">insertSHIFT(int state, symbolsVT* vt, int numOfPro): void 插入一个移进状态</text><ellipse cx="15.2466" cy="979.5894" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="382.0628" x="23.3184" y="982.4687">insertREDUCE(int state, symbolsVT* vt, int numOfPro): void 插入一个规约状态</text><ellipse cx="15.2466" cy="991.0734" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="287.8924" x="23.3184" y="993.9528">insertACC(int state, symbolsVT* vt): void 插入一个acc状态</text><ellipse cx="15.2466" cy="1002.5575" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="389.2377" x="23.3184" y="1005.4368">getACTION(int state, symbolsVT* vt): std::pair&lt;char, int&gt; 获得一个ACTION信息</text><ellipse cx="15.2466" cy="1014.0415" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="146.1883" x="23.3184" y="1016.9208">print(): void 调试输出ACTON表</text><!--MD5=[6483fd4d9de00e571941e1b8b816155a]
class GOTOTable--><rect fill="#FEFECE" filter="url(#f97afrxdsupjo)" height="134.9215" id="GOTOTable" style="stroke: #A80036; stroke-width: 1.345291479820628;" width="408.0717" x="575.3363" y="859.1928"/><ellipse cx="744.6188" cy="873.5426" fill="#ADD1B2" rx="9.8655" ry="9.8655" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><path d="M746.7209,869.6609 C745.88,869.2685 745.3475,869.1424 744.5628,869.1424 C742.2085,869.1424 740.4148,871.0062 740.4148,873.4445 L740.4148,874.4535 C740.4148,876.7657 742.3066,878.4613 744.8991,878.4613 C745.9922,878.4613 747.0291,878.1951 747.7018,877.7046 C748.2203,877.3402 748.5146,876.9339 748.5146,876.5835 C748.5146,876.1771 748.1642,875.8268 747.7438,875.8268 C747.5476,875.8268 747.3655,875.8969 747.1973,876.065 C746.7909,876.4994 746.7909,876.4994 746.6228,876.5835 C746.2444,876.8217 745.6278,876.9339 744.9411,876.9339 C743.1054,876.9339 741.9423,875.9529 741.9423,874.4254 L741.9423,873.4445 C741.9423,871.847 743.0633,870.6698 744.6188,870.6698 C745.1373,870.6698 745.6839,870.81 746.1043,871.0342 C746.5387,871.2864 746.6928,871.4826 746.7769,871.847 C746.833,872.2113 746.861,872.3234 746.9871,872.4355 C747.1132,872.5617 747.3234,872.6598 747.5196,872.6598 C747.7578,872.6598 747.9961,872.5336 748.1502,872.3374 C748.2483,872.1973 748.2763,872.0291 748.2763,871.6508 L748.2763,870.3756 C748.2763,869.9832 748.2623,869.8711 748.1783,869.7309 C748.0381,869.4927 747.7859,869.3666 747.5196,869.3666 C747.2534,869.3666 747.0712,869.4507 746.875,869.7309 L746.7209,869.6609 Z "/><text fill="#000000" font-family="sans-serif" font-size="10.7623" lengthAdjust="spacingAndGlyphs" textLength="61.8834" x="763.0045" y="877.2684">GOTOTable</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="576.2332" x2="982.5112" y1="887.8924" y2="887.8924"/><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="582.5112" y="895.0673"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="384.7534" x="593.2735" y="900.6372">GOTO[NUMOFSTATE][NUMOFVN]: int GOTO表，当为非-1数字时表示某个合法状态</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="582.5112" y="906.5513"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="77.13" x="593.2735" y="912.1212">numofstate: int</text><rect fill="none" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="582.5112" y="918.0353"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="322.87" x="593.2735" y="923.6052">vnmap: std::map&lt;symbolsVN*, int&gt; 非终结符对应在分析表中的位置</text><line style="stroke: #A80036; stroke-width: 1.345291479820628;" x1="576.2332" x2="982.5112" y1="929.5193" y2="929.5193"/><rect fill="#F24D5C" height="5.3812" style="stroke: #C82930; stroke-width: 0.8968609865470852;" width="5.3812" x="582.5112" y="936.6942"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="252.0179" x="593.2735" y="942.2641">getVNMap(symbolsVN*): int 获得非终结符对应的编号</text><ellipse cx="585.2018" cy="950.8688" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="229.5964" x="593.2735" y="953.7482">setNumOfState(int): void 设置GOTO表的状态数</text><ellipse cx="585.2018" cy="962.3529" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="222.4215" x="593.2735" y="965.2322">insertVN(symbolsVN*): void 插入一个非终结符</text><ellipse cx="585.2018" cy="973.8369" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="355.157" x="593.2735" y="976.7162">insert(int state, symbolsVN* vn, int numOfPro): void 插入一个GOTO状态</text><ellipse cx="585.2018" cy="985.3209" fill="#84BE84" rx="2.6906" ry="2.6906" style="stroke: #038048; stroke-width: 0.8968609865470852;"/><text fill="#000000" font-family="sans-serif" font-size="9.8655" lengthAdjust="spacingAndGlyphs" textLength="262.7803" x="593.2735" y="988.2002">get(int state, symbolsVN* vn): int 获得一个GOTO状态</text><!--MD5=[4fa750cd51383fb8f0db0b9ac9d1c8ae]
reverse link symbolsVT to symbols--><path d="M345.0188,175.4 C378.3623,198.4664 413.478,222.7578 441.4404,242.1022 " fill="none" id="symbolsVT&lt;-symbols" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="none" points="341.2888,180.4529,330.1094,165.0852,348.4323,170.1274,341.2888,180.4529" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[48212c76556f02a7422c70aaff6e2756]
reverse link symbolsVN to symbols--><path d="M591.2341,199.9686 C573.3283,214.9767 555.8978,229.5857 540.9462,242.1175 " fill="none" id="symbolsVN&lt;-symbols" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="none" points="587.2063,195.1525,604.9857,188.4413,595.2717,204.7758,587.2063,195.1525" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[6aea9ff63c2c3035c020239e808150ab]
reverse link symbols to production--><path d="M495.9641,324.183 C495.9641,339.0206 495.9641,356.174 495.9641,372.9785 " fill="none" id="symbols&lt;-production" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="495.9641,319.6547,492.3767,327.7265,495.9641,324.139,499.5516,327.7265,495.9641,319.6547" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[59f28342599692795863a9ea0fd11889]
reverse link symbolsVN to production--><path d="M674.8996,192.661 C657.2565,232.9749 634.4538,279.7803 608.9686,319.2825 C597.2018,337.5211 583.1148,355.9291 568.9435,372.9686 " fill="none" id="symbolsVN&lt;-production" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="676.6987,188.5309,670.1853,194.4974,674.9072,192.6419,676.7627,197.3638,676.6987,188.5309" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[c8b87d60b1138ba9ed5ae907abb781eb]
reverse link production to analysisTable--><path d="M495.9641,535.4906 C495.9641,551.4888 495.9641,568.374 495.9641,584.7345 " fill="none" id="production&lt;-analysisTable" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="495.9641,531.0027,492.3767,539.0744,495.9641,535.487,499.5516,539.0744,495.9641,531.0027" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[9b11171d50a7a4d38c04f88c6d54aba8]
reverse link symbolsVT to analysisTable--><path d="M221.1982,169.6825 C208.609,260.3058 199.8592,418.7291 266.3677,530.9417 C278.2978,551.0691 294.1345,568.9623 311.9336,584.7363 " fill="none" id="symbolsVT&lt;-analysisTable" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="221.8386,165.1516,217.1565,172.6417,221.2108,169.5917,224.2608,173.646,221.8386,165.1516" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[5ed4889495a2fa5e95cd1c074cd5a850]
reverse link symbolsVN to analysisTable--><path d="M741.1713,193.374 C763.67,285.4484 782.4099,426.3238 725.5605,530.9417 C714.6161,551.0825 699.6413,568.9193 682.5435,584.6063 " fill="none" id="symbolsVN&lt;-analysisTable" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="740.0296,188.7525,738.4846,197.4494,741.106,193.1057,745.4497,195.7271,740.0296,188.7525" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[1d8d476e29902a1abb557a803a194ee3]
link analysisTable to ACTIONTable--><path d="M401.3013,776.9785 C385.0099,793.3901 368.0484,810.4771 351.6753,826.9722 " fill="none" id="analysisTable-&gt;ACTIONTable" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="348.409,830.2628,356.6417,827.0619,351.5683,827.0804,351.5499,822.007,348.409,830.2628" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[f4fc089635001a13e2dc525d5da00965]
link analysisTable to GOTOTable--><path d="M606.7552,776.9785 C637.3372,803.3031 669.9399,831.3659 698.4807,855.9327 " fill="none" id="analysisTable-&gt;GOTOTable" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="701.9408,858.9103,698.1625,850.9261,698.5418,855.9853,693.4826,856.3646,701.9408,858.9103" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[de42c04f09a3219973233684cb91c951]
reverse link symbolsVT to ACTIONTable--><path d="M217.0081,169.6072 C212.2502,192.6072 207.7399,218.3318 205.3812,242.1525 C184.6359,451.6601 215.7291,698.1561 236.8951,830.339 " fill="none" id="symbolsVT&lt;-ACTIONTable" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="217.9623,165.0448,212.7975,172.2106,217.0437,169.4341,219.8203,173.6803,217.9623,165.0448" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[11d9fd4fbaca279cae984a2f85cc42c6]
reverse link symbolsVN to GOTOTable--><path d="M763.304,192.887 C769.9489,208.9148 775.7085,225.7049 779.3722,242.1525 C828.7067,463.6377 804.3291,735.6126 788.8404,859.0242 " fill="none" id="symbolsVN&lt;-GOTOTable" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><polygon fill="#A80036" points="761.4081,188.3874,761.2366,197.2188,763.1494,192.5198,767.8484,194.4326,761.4081,188.3874" style="stroke: #A80036; stroke-width: 0.8968609865470852;"/><!--MD5=[6386b95b2076e26d0e1e77ef2ca3b8f9]
@startuml
hide empty description
scale 1000 width
class symbols{
    终结符和非终结符组成的符号
    ..
    + getClassName(): virtual std::string
    + print(): virtual void
}
class symbolsVT{
    终结符
    终结符由终结符的值和编码构成
    ..
    - word: std::string 终结符的值
    - code: std::string 词法分析后终结符的标识（编码）
    + getClassName(): virtual std::string
    + getWord(): std::string
    + getCode(): std::string
    + print(): void
}
class symbolsVN{
    非终结符
    非终结符由其左部的非终结符和有部一个一些产生式构成
    产生式即为一些符号的排列，此处存储的是一些产生式的指针
    ..
    - name: std::string 非终结符左部名称X
    - p[maxnNum]: production * 产生式集合
    - num: int  产生式个数
    + getClassName(): std::string
    + getName(): std::string
    + insertProduction(production *newp): void 加入一个产生式
    + getProductionIndexOf(int i): production* 获得第i个产生式
    + getAllProduction(): 获得所有的产生式
    + print(): void
}
class production{
    产生式
    一个产生式由一个左部的非终结符和一些右部的符号集合构成
    ..
    - vn: symbolsVN * 产生式左部的非终结符
    - pro[maxnLen]: symbols* 产生式，由一些非终结符和终结符构成，故使用符号指针来指引
    + push_back(symbols *a): void 为产生式后部插入一个符号
    + getVN(): symbolsVN* 获得左部非终结符符号
    + getProduction(): symbols** 获得产生式指针数组
    + getLen(): int 获得产生式长度
    + getProductionIndexOf(int i): symbols* 获得产生式中第i个位置的符号
    + print(): void
}
class analysisTable{
    分析表
    由ACTION表和GOTO表组成
    由前期的分析得到该文法的SLR分析表
    ..
    - ACTION: ACTIONTable ACTION表
    - GOTO: GOTOTable GOTO表
    - numofstate: int 状态个数I_n
    - productions[NUMOFPRODUCTIONS]: production* 产生式数组，下标即为编号
    + insertSymbols(symbols*): void 插入一个符号
    + insertProduction(production* p): void 插入一条产生式，自动编号
    + getProduction(int i): production* 获得第i条产生式
    + insert(int state, symbols* s, char ch, int numOfPro): void 插入一个状态
    + get(int state, symbols* s): std::pair<char, int> 获得一个状态
    + print(): void
}
class ACTIONTable{
    - ACTION[NUMOFSTATE][NUMOFVT]: std::pair<char, int> ACTION表，四种构成： s_i, r_i, acc, err，\n分别表示移进状态、规约状态、接受状态和错误状态
    - numofstate: int ACTION表状态的数量
    - numofsymbolsvt: int ACTION表终结符的数量
    - vtmap: std::map<symbolsVT*, int> 终结符对应在分析表中的位置
    - getVTMap(symbolsVT*): int 获得终结符对应的编号
    + setNumOfState(int): void 设置表的状态的数量
    + insertVT(symbolsVT*): void 插入一个终结符以及给一个对应的编号
    + insertSHIFT(int state, symbolsVT* vt, int numOfPro): void 插入一个移进状态
    + insertREDUCE(int state, symbolsVT* vt, int numOfPro): void 插入一个规约状态
    + insertACC(int state, symbolsVT* vt): void 插入一个acc状态
    + getACTION(int state, symbolsVT* vt): std::pair<char, int> 获得一个ACTION信息
    + print(): void 调试输出ACTON表
}
class GOTOTable{
    - GOTO[NUMOFSTATE][NUMOFVN]: int GOTO表，当为非-1数字时表示某个合法状态
    - numofstate: int 
    - vnmap: std::map<symbolsVN*, int> 非终结符对应在分析表中的位置
    - getVNMap(symbolsVN*): int 获得非终结符对应的编号
    + setNumOfState(int): void 设置GOTO表的状态数
    + insertVN(symbolsVN*): void 插入一个非终结符
    + insert(int state, symbolsVN* vn, int numOfPro): void 插入一个GOTO状态
    + get(int state, symbolsVN* vn): int 获得一个GOTO状态
}
symbolsVT <|- - symbols
symbolsVN <|- - symbols
symbols <- - production
symbolsVN <- - production
production <- - analysisTable
symbolsVT <- - analysisTable
symbolsVN <- - analysisTable
analysisTable - -> ACTIONTable
analysisTable - -> GOTOTable
symbolsVT <- - ACTIONTable
symbolsVN <- - GOTOTable
@enduml

PlantUML version 1.2020.09beta17(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 14.0.1+7
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>