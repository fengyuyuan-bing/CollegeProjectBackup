<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1246.4986px" preserveAspectRatio="none" style="width:1009px;height:1246px;" version="1.1" viewBox="0 0 1009 1246" width="1009.8039px" zoomAndPan="magnify"><defs><filter height="300%" id="f15ualuvj4s18q" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.8011204481792715"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="5.602240896358543" dy="5.602240896358543" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[14206c5a513f4f95fcbd1ec2f195129c]
class symbols--><rect fill="#FEFECE" filter="url(#f15ualuvj4s18q)" height="121.0281" id="symbols" style="stroke: #A80036; stroke-width: 2.1008403361344534;" width="312.3249" x="348.7395" y="378.1513"/><ellipse cx="463.2353" cy="400.5602" fill="#ADD1B2" rx="15.4062" ry="15.4062" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><path d="M466.5179,394.4984 C465.2048,393.8857 464.3732,393.6887 463.1478,393.6887 C459.4713,393.6887 456.6702,396.5993 456.6702,400.407 L456.6702,401.9827 C456.6702,405.5935 459.6245,408.2414 463.673,408.2414 C465.3799,408.2414 466.9993,407.8256 468.0497,407.0597 C468.8594,406.4907 469.319,405.8561 469.319,405.309 C469.319,404.6744 468.7719,404.1273 468.1154,404.1273 C467.809,404.1273 467.5245,404.2367 467.2619,404.4993 C466.6273,405.1777 466.6273,405.1777 466.3647,405.309 C465.7738,405.681 464.8109,405.8561 463.7386,405.8561 C460.8718,405.8561 459.0555,404.3242 459.0555,401.9389 L459.0555,400.407 C459.0555,397.9123 460.8062,396.0741 463.2353,396.0741 C464.045,396.0741 464.8985,396.2929 465.555,396.643 C466.2334,397.0369 466.4741,397.3433 466.6054,397.9123 C466.6929,398.4813 466.7367,398.6563 466.9336,398.8314 C467.1306,399.0284 467.4589,399.1815 467.7652,399.1815 C468.1373,399.1815 468.5093,398.9846 468.75,398.6782 C468.9032,398.4594 468.947,398.1968 468.947,397.6059 L468.947,395.6145 C468.947,395.0018 468.9251,394.8267 468.7938,394.6078 C468.5749,394.2358 468.181,394.0389 467.7652,394.0389 C467.3494,394.0389 467.065,394.1702 466.7586,394.6078 L466.5179,394.4984 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8067" lengthAdjust="spacingAndGlyphs" textLength="71.4286" x="491.9468" y="406.3786">symbols</text><line style="stroke: #A80036; stroke-width: 2.1008403361344534;" x1="350.1401" x2="659.6639" y1="422.9692" y2="422.9692"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="200.2801" x="357.1429" y="442.8718">终结符和非终结符组成的符号</text><line style="stroke: #A80036; stroke-width: 1.4005602240896358; stroke-dasharray: 1.0,2.0;" x1="350.1401" x2="659.6639" y1="452.1074" y2="452.1074"/><ellipse cx="364.1457" cy="467.5136" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="275.9104" x="376.7507" y="472.01">getClassName(): virtual std::string</text><ellipse cx="364.1457" cy="485.4473" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="147.0588" x="376.7507" y="489.9437">print(): virtual void</text><!--MD5=[60cc1c2bd56641e618da5c20b30275a6]
class symbolsVT--><rect fill="#FEFECE" filter="url(#f15ualuvj4s18q)" height="210.6968" id="symbolsVT" style="stroke: #A80036; stroke-width: 2.1008403361344534;" width="401.9608" x="8.4034" y="47.619"/><ellipse cx="157.2129" cy="70.028" fill="#ADD1B2" rx="15.4062" ry="15.4062" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><path d="M160.4954,63.9662 C159.1824,63.3535 158.3508,63.1565 157.1254,63.1565 C153.4489,63.1565 150.6478,66.0671 150.6478,69.8748 L150.6478,71.4505 C150.6478,75.0613 153.6021,77.7092 157.6506,77.7092 C159.3575,77.7092 160.9769,77.2934 162.0273,76.5275 C162.837,75.9585 163.2966,75.3239 163.2966,74.7768 C163.2966,74.1422 162.7495,73.5951 162.093,73.5951 C161.7866,73.5951 161.5021,73.7045 161.2395,73.9671 C160.6049,74.6455 160.6049,74.6455 160.3423,74.7768 C159.7514,75.1488 158.7885,75.3239 157.7162,75.3239 C154.8494,75.3239 153.0331,73.792 153.0331,71.4067 L153.0331,69.8748 C153.0331,67.3801 154.7838,65.5418 157.2129,65.5418 C158.0226,65.5418 158.8761,65.7607 159.5326,66.1108 C160.211,66.5047 160.4517,66.8111 160.583,67.3801 C160.6705,67.9491 160.7143,68.1241 160.9112,68.2992 C161.1082,68.4961 161.4364,68.6493 161.7428,68.6493 C162.1148,68.6493 162.4869,68.4524 162.7276,68.146 C162.8808,67.9272 162.9245,67.6646 162.9245,67.0737 L162.9245,65.0823 C162.9245,64.4695 162.9027,64.2945 162.7714,64.0756 C162.5525,63.7036 162.1586,63.5067 161.7428,63.5067 C161.327,63.5067 161.0425,63.638 160.7362,64.0756 L160.4954,63.9662 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8067" lengthAdjust="spacingAndGlyphs" textLength="92.437" x="185.9244" y="75.8464">symbolsVT</text><line style="stroke: #A80036; stroke-width: 2.1008403361344534;" x1="9.8039" x2="408.9636" y1="92.437" y2="92.437"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="46.2185" x="16.8067" y="112.3396">终结符</text><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="215.6863" x="16.8067" y="130.2733">终结符由终结符的值和编码构成</text><line style="stroke: #A80036; stroke-width: 1.4005602240896358; stroke-dasharray: 1.0,2.0;" x1="9.8039" x2="408.9636" y1="139.5089" y2="139.5089"/><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="19.6078" y="150.7134"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="211.4846" x="36.4146" y="159.4115">word: std::string 终结符的值</text><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="19.6078" y="168.6471"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="365.5462" x="36.4146" y="177.3453">code: std::string 词法分析后终结符的标识（编码）</text><ellipse cx="23.8095" cy="190.7826" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="275.9104" x="36.4146" y="195.279">getClassName(): virtual std::string</text><ellipse cx="23.8095" cy="208.7163" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="169.4678" x="36.4146" y="213.2127">getWord(): std::string</text><ellipse cx="23.8095" cy="226.65" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="169.4678" x="36.4146" y="231.1465">getCode(): std::string</text><ellipse cx="23.8095" cy="244.5838" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="91.0364" x="36.4146" y="249.0802">print(): void</text><!--MD5=[863fa5218c522b12d482362076ef1ce2]
class symbolsVN--><rect fill="#FEFECE" filter="url(#f15ualuvj4s18q)" height="282.4317" id="symbolsVN" style="stroke: #A80036; stroke-width: 2.1008403361344534;" width="476.1905" x="497.8992" y="11.2045"/><ellipse cx="682.423" cy="33.6134" fill="#ADD1B2" rx="15.4062" ry="15.4062" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><path d="M685.7055,27.5516 C684.3925,26.9389 683.5609,26.7419 682.3354,26.7419 C678.659,26.7419 675.8578,29.6525 675.8578,33.4603 L675.8578,35.0359 C675.8578,38.6467 678.8121,41.2946 682.8606,41.2946 C684.5676,41.2946 686.187,40.8789 687.2374,40.1129 C688.0471,39.5439 688.5067,38.9093 688.5067,38.3622 C688.5067,37.7276 687.9596,37.1805 687.303,37.1805 C686.9967,37.1805 686.7122,37.2899 686.4496,37.5525 C685.815,38.2309 685.815,38.2309 685.5523,38.3622 C684.9615,38.7342 683.9986,38.9093 682.9263,38.9093 C680.0595,38.9093 678.2432,37.3775 678.2432,34.9921 L678.2432,33.4603 C678.2432,30.9655 679.9939,29.1273 682.423,29.1273 C683.2327,29.1273 684.0861,29.3461 684.7426,29.6963 C685.421,30.0902 685.6618,30.3965 685.7931,30.9655 C685.8806,31.5345 685.9244,31.7096 686.1213,31.8846 C686.3183,32.0816 686.6465,32.2348 686.9529,32.2348 C687.3249,32.2348 687.697,32.0378 687.9377,31.7314 C688.0909,31.5126 688.1346,31.25 688.1346,30.6591 L688.1346,28.6677 C688.1346,28.055 688.1127,27.8799 687.9814,27.6611 C687.7626,27.289 687.3687,27.0921 686.9529,27.0921 C686.5371,27.0921 686.2526,27.2234 685.9463,27.6611 L685.7055,27.5516 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8067" lengthAdjust="spacingAndGlyphs" textLength="95.2381" x="711.1345" y="39.4318">symbolsVN</text><line style="stroke: #A80036; stroke-width: 2.1008403361344534;" x1="499.2997" x2="972.6891" y1="56.0224" y2="56.0224"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="61.6246" x="506.3025" y="75.925">非终结符</text><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="385.1541" x="506.3025" y="93.8587">非终结符由其左部的非终结符和有部一个一些产生式构成</text><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="415.9664" x="506.3025" y="111.7925">产生式即为一些符号的排列，此处存储的是一些产生式的指针</text><line style="stroke: #A80036; stroke-width: 1.4005602240896358; stroke-dasharray: 1.0,2.0;" x1="499.2997" x2="972.6891" y1="121.0281" y2="121.0281"/><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="509.1036" y="132.2326"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="275.9104" x="525.9104" y="140.9307">name: std::string 非终结符左部名称X</text><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="509.1036" y="150.1663"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="291.3165" x="525.9104" y="158.8644">p[maxnNum]: production * 产生式集合</text><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="509.1036" y="168.1001"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="152.6611" x="525.9104" y="176.7982">num: int  产生式个数</text><ellipse cx="513.3053" cy="190.2355" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="219.888" x="525.9104" y="194.7319">getClassName(): std::string</text><ellipse cx="513.3053" cy="208.1692" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="175.07" x="525.9104" y="212.6656">getName(): std::string</text><ellipse cx="513.3053" cy="226.1029" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="439.7759" x="525.9104" y="230.5994">insertProduction(production *newp): void 加入一个产生式</text><ellipse cx="513.3053" cy="244.0367" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="432.7731" x="525.9104" y="248.5331">getProductionIndexOf(int i): production* 获得第i个产生式</text><ellipse cx="513.3053" cy="261.9704" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="274.5098" x="525.9104" y="266.4668">getAllProduction(): 获得所有的产生式</text><ellipse cx="513.3053" cy="279.9041" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="91.0364" x="525.9104" y="284.4006">print(): void</text><!--MD5=[ca8828f629060c71aeac5c994a5a852f]
class production--><rect fill="#FEFECE" filter="url(#f15ualuvj4s18q)" height="246.5643" id="production" style="stroke: #A80036; stroke-width: 2.1008403361344534;" width="670.8683" x="208.6835" y="582.6331"/><ellipse cx="491.9468" cy="605.042" fill="#ADD1B2" rx="15.4062" ry="15.4062" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><path d="M495.2293,598.9802 C493.9163,598.3675 493.0847,598.1705 491.8592,598.1705 C488.1828,598.1705 485.3817,601.0811 485.3817,604.8888 L485.3817,606.4645 C485.3817,610.0753 488.336,612.7232 492.3845,612.7232 C494.0914,612.7232 495.7108,612.3074 496.7612,611.5415 C497.5709,610.9725 498.0305,610.3379 498.0305,609.7908 C498.0305,609.1562 497.4834,608.6091 496.8269,608.6091 C496.5205,608.6091 496.236,608.7185 495.9734,608.9811 C495.3388,609.6595 495.3388,609.6595 495.0762,609.7908 C494.4853,610.1628 493.5224,610.3379 492.4501,610.3379 C489.5833,610.3379 487.767,608.806 487.767,606.4207 L487.767,604.8888 C487.767,602.3941 489.5177,600.5558 491.9468,600.5558 C492.7565,600.5558 493.6099,600.7747 494.2665,601.1248 C494.9449,601.5187 495.1856,601.8251 495.3169,602.3941 C495.4044,602.9631 495.4482,603.1381 495.6451,603.3132 C495.8421,603.5102 496.1703,603.6633 496.4767,603.6633 C496.8487,603.6633 497.2208,603.4664 497.4615,603.16 C497.6147,602.9412 497.6584,602.6786 497.6584,602.0877 L497.6584,600.0963 C497.6584,599.4835 497.6366,599.3085 497.5053,599.0896 C497.2864,598.7176 496.8925,598.5207 496.4767,598.5207 C496.0609,598.5207 495.7764,598.652 495.4701,599.0896 L495.2293,598.9802 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8067" lengthAdjust="spacingAndGlyphs" textLength="92.437" x="520.6583" y="610.8604">production</text><line style="stroke: #A80036; stroke-width: 2.1008403361344534;" x1="210.084" x2="878.1513" y1="627.451" y2="627.451"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="46.2185" x="217.0868" y="647.3536">产生式</text><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="415.9664" x="217.0868" y="665.2873">一个产生式由一个左部的非终结符和一些右部的符号集合构成</text><line style="stroke: #A80036; stroke-width: 1.4005602240896358; stroke-dasharray: 1.0,2.0;" x1="210.084" x2="878.1513" y1="674.5229" y2="674.5229"/><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="219.888" y="685.7274"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="292.7171" x="236.6947" y="694.4255">vn: symbolsVN * 产生式左部的非终结符</text><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="219.888" y="703.6612"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="634.4538" x="236.6947" y="712.3593">pro[maxnLen]: symbols* 产生式，由一些非终结符和终结符构成，故使用符号指针来指引</text><ellipse cx="224.0896" cy="725.7966" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="420.1681" x="236.6947" y="730.293">push_back(symbols *a): void 为产生式后部插入一个符号</text><ellipse cx="224.0896" cy="743.7303" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="327.7311" x="236.6947" y="748.2267">getVN(): symbolsVN* 获得左部非终结符符号</text><ellipse cx="224.0896" cy="761.664" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="358.5434" x="236.6947" y="766.1605">getProduction(): symbols** 获得产生式指针数组</text><ellipse cx="224.0896" cy="779.5978" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="210.084" x="236.6947" y="784.0942">getLen(): int 获得产生式长度</text><ellipse cx="224.0896" cy="797.5315" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="509.8039" x="236.6947" y="802.0279">getProductionIndexOf(int i): symbols* 获得产生式中第i个位置的符号</text><ellipse cx="224.0896" cy="815.4652" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="91.0364" x="236.6947" y="819.9617">print(): void</text><!--MD5=[964012e3a2694457aad972850207b25a]
class analysisTable--><rect fill="#FEFECE" filter="url(#f15ualuvj4s18q)" height="318.2992" id="analysisTable" style="stroke: #A80036; stroke-width: 2.1008403361344534;" width="826.3305" x="130.9524" y="913.1653"/><ellipse cx="479.3417" cy="935.5742" fill="#ADD1B2" rx="15.4062" ry="15.4062" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><path d="M482.6243,929.5124 C481.3113,928.8997 480.4797,928.7027 479.2542,928.7027 C475.5777,928.7027 472.7766,931.6133 472.7766,935.421 L472.7766,936.9967 C472.7766,940.6075 475.7309,943.2554 479.7794,943.2554 C481.4863,943.2554 483.1057,942.8396 484.1562,942.0737 C484.9659,941.5047 485.4254,940.8701 485.4254,940.323 C485.4254,939.6884 484.8783,939.1413 484.2218,939.1413 C483.9154,939.1413 483.631,939.2507 483.3683,939.5133 C482.7337,940.1917 482.7337,940.1917 482.4711,940.323 C481.8803,940.695 480.9174,940.8701 479.8451,940.8701 C476.9783,940.8701 475.1619,939.3382 475.1619,936.9529 L475.1619,935.421 C475.1619,932.9263 476.9126,931.0881 479.3417,931.0881 C480.1514,931.0881 481.0049,931.3069 481.6614,931.657 C482.3398,932.0509 482.5805,932.3573 482.7118,932.9263 C482.7994,933.4953 482.8431,933.6703 483.0401,933.8454 C483.237,934.0424 483.5653,934.1956 483.8717,934.1956 C484.2437,934.1956 484.6157,933.9986 484.8564,933.6922 C485.0096,933.4734 485.0534,933.2108 485.0534,932.6199 L485.0534,930.6285 C485.0534,930.0158 485.0315,929.8407 484.9002,929.6218 C484.6814,929.2498 484.2875,929.0529 483.8717,929.0529 C483.4559,929.0529 483.1714,929.1842 482.865,929.6218 L482.6243,929.5124 Z "/><text fill="#000000" font-family="sans-serif" font-size="16.8067" lengthAdjust="spacingAndGlyphs" textLength="117.6471" x="508.0532" y="941.3926">analysisTable</text><line style="stroke: #A80036; stroke-width: 2.1008403361344534;" x1="132.3529" x2="955.8824" y1="957.9832" y2="957.9832"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="92.437" x="139.3557" y="977.8858">分析表子程序</text><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="424.3697" x="139.3557" y="995.8195">由前期的分析得到该文法的预测分析表M[X, a]及其相关的操作</text><line style="stroke: #A80036; stroke-width: 1.4005602240896358; stroke-dasharray: 1.0,2.0;" x1="132.3529" x2="955.8824" y1="1005.0551" y2="1005.0551"/><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="142.1569" y="1016.2596"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="428.5714" x="158.9636" y="1024.9577">M[NUMOFVN][NUMOFVT]: production* 预测分析表M[A, a]</text><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="142.1569" y="1034.1934"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="193.2773" x="158.9636" y="1042.8915">numofvt: int 终结符的数量</text><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="142.1569" y="1052.1271"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="212.8852" x="158.9636" y="1060.8252">numofvn: int 非终结符的数量</text><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="142.1569" y="1070.0608"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="485.9944" x="158.9636" y="1078.7589">vtmap: std::map&lt;symbolsVT*, int&gt; 终结符对应在分析表中的位置</text><rect fill="none" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="142.1569" y="1087.9946"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="507.0028" x="158.9636" y="1096.6927">vnmap: std::map&lt;symbolsVN*, int&gt; 非终结符对应在分析表中的位置</text><rect fill="#F24D5C" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="142.1569" y="1105.9283"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="376.7507" x="158.9636" y="1114.6264">getVTMap(symbolsVT*): int 获得终结符对应的编号</text><rect fill="#F24D5C" height="8.4034" style="stroke: #C82930; stroke-width: 1.4005602240896358;" width="8.4034" x="142.1569" y="1123.862"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="394.958" x="158.9636" y="1132.5602">getVNMap(symbolsVN*): int 获得非终结符对应的编号</text><ellipse cx="146.3585" cy="1145.9975" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="487.395" x="158.9636" y="1150.4939">insertVT(symbolsVT*): void 插入一个终结符以及给一个对应的编号</text><ellipse cx="146.3585" cy="1163.9312" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="222.6891" x="158.9636" y="1168.4276">insertVN(symbolsVN*): void</text><ellipse cx="146.3585" cy="1181.8649" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="789.916" x="158.9636" y="1186.3614">insertProduction(symbolsVN*, symbolsVT*, production*): void 在分析表中的某一行某一列插入一条产生式</text><ellipse cx="146.3585" cy="1199.7987" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="710.084" x="158.9636" y="1204.2951">getProduction(symbolsVN*, symbolsVT*): production* 获得某一行某一列的产生式，不存在为空</text><ellipse cx="146.3585" cy="1217.7324" fill="#84BE84" rx="4.2017" ry="4.2017" style="stroke: #038048; stroke-width: 1.4005602240896358;"/><text fill="#000000" font-family="sans-serif" font-size="15.4062" lengthAdjust="spacingAndGlyphs" textLength="91.0364" x="158.9636" y="1222.2288">print(): void</text><!--MD5=[4fa750cd51383fb8f0db0b9ac9d1c8ae]
reverse link symbolsVT to symbols--><path d="M338.3824,277.5574 C374.8585,312.4776 412.8852,348.8824 443.3754,378.0728 " fill="none" id="symbolsVT&lt;-symbols" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><polygon fill="none" points="331.2003,284.2535,317.7451,257.8011,344.7591,270.091,331.2003,284.2535" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><!--MD5=[48212c76556f02a7422c70aaff6e2756]
reverse link symbolsVN to symbols--><path d="M603.472,316.3011 C585.5994,338.1807 568.2815,359.3824 553.2787,377.7507 " fill="none" id="symbolsVN&lt;-symbols" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><polygon fill="none" points="596.1513,309.7661,621.4636,294.2745,611.3361,322.1709,596.1513,309.7661" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><!--MD5=[6aea9ff63c2c3035c020239e808150ab]
reverse link symbols to production--><path d="M514.7507,506.2521 C518.1835,529.423 522.1513,556.2101 526.0392,582.4524 " fill="none" id="symbols&lt;-production" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><polygon fill="#A80036" points="513.7031,499.1807,510.0084,512.4706,514.7293,506.1079,521.092,510.8287,513.7031,499.1807" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><!--MD5=[59f28342599692795863a9ea0fd11889]
reverse link symbolsVN to production--><path d="M729.2311,301.5924 C722.6275,364.0406 709.9034,436.549 685.5742,498.5994 C674.3347,527.2661 658.4496,555.8669 641.3585,582.2353 " fill="none" id="symbolsVN&lt;-production" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><polygon fill="#A80036" points="729.9678,294.4188,723.1054,306.3845,729.2514,301.3848,734.2511,307.5308,729.9678,294.4188" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><!--MD5=[c8b87d60b1138ba9ed5ae907abb781eb]
reverse link production to analysisTable--><path d="M544.1176,836.9048 C544.1176,861.5098 544.1176,887.507 544.1176,912.8725 " fill="none" id="production&lt;-analysisTable" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><polygon fill="#A80036" points="544.1176,829.3165,538.5154,841.9216,544.1176,836.3193,549.7199,841.9216,544.1176,829.3165" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><!--MD5=[9b11171d50a7a4d38c04f88c6d54aba8]
reverse link symbolsVT to analysisTable--><path d="M172.9356,264.881 C133.701,405.2213 88.8084,650.2661 184.1737,829.1317 C200.8151,860.3459 223.479,888.2409 249.3936,912.9846 " fill="none" id="symbolsVT&lt;-analysisTable" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><polygon fill="#A80036" points="174.916,257.8641,166.1001,268.4732,173.0136,264.6036,176.8832,271.5171,174.916,257.8641" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><!--MD5=[5ed4889495a2fa5e95cd1c074cd5a850]
reverse link symbolsVN to analysisTable--><path d="M830.2745,300.6737 C908.619,442.6499 993.9258,660.584 904.0616,829.1317 C887.4202,860.3459 864.7563,888.2409 838.8417,912.9846 " fill="none" id="symbolsVN&lt;-analysisTable" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><polygon fill="#A80036" points="826.7857,294.3922,828.01,308.1316,830.1866,300.5137,837.8045,302.6903,826.7857,294.3922" style="stroke: #A80036; stroke-width: 1.4005602240896358;"/><!--MD5=[b011d1b5b2081934df0abc92f8e6dd81]
@startuml
hide empty description
scale 1000 width
class symbols{
    终结符和非终结符组成的符号
    ..
    + getClassName(): virtual std::string
    + print(): virtual void
}
class symbolsVT{
    终结符
    终结符由终结符的值和编码构成
    ..
    - word: std::string 终结符的值
    - code: std::string 词法分析后终结符的标识（编码）
    + getClassName(): virtual std::string
    + getWord(): std::string
    + getCode(): std::string
    + print(): void
}
class symbolsVN{
    非终结符
    非终结符由其左部的非终结符和有部一个一些产生式构成
    产生式即为一些符号的排列，此处存储的是一些产生式的指针
    ..
    - name: std::string 非终结符左部名称X
    - p[maxnNum]: production * 产生式集合
    - num: int  产生式个数
    + getClassName(): std::string
    + getName(): std::string
    + insertProduction(production *newp): void 加入一个产生式
    + getProductionIndexOf(int i): production* 获得第i个产生式
    + getAllProduction(): 获得所有的产生式
    + print(): void
}
class production{
    产生式
    一个产生式由一个左部的非终结符和一些右部的符号集合构成
    ..
    - vn: symbolsVN * 产生式左部的非终结符
    - pro[maxnLen]: symbols* 产生式，由一些非终结符和终结符构成，故使用符号指针来指引
    + push_back(symbols *a): void 为产生式后部插入一个符号
    + getVN(): symbolsVN* 获得左部非终结符符号
    + getProduction(): symbols** 获得产生式指针数组
    + getLen(): int 获得产生式长度
    + getProductionIndexOf(int i): symbols* 获得产生式中第i个位置的符号
    + print(): void
}
class analysisTable{
    分析表子程序
    由前期的分析得到该文法的预测分析表M[X, a]及其相关的操作
    ..
    - M[NUMOFVN][NUMOFVT]: production* 预测分析表M[A, a]
    - numofvt: int 终结符的数量
    - numofvn: int 非终结符的数量
    - vtmap: std::map<symbolsVT*, int> 终结符对应在分析表中的位置
    - vnmap: std::map<symbolsVN*, int> 非终结符对应在分析表中的位置
    - getVTMap(symbolsVT*): int 获得终结符对应的编号
    - getVNMap(symbolsVN*): int 获得非终结符对应的编号
    + insertVT(symbolsVT*): void 插入一个终结符以及给一个对应的编号
    + insertVN(symbolsVN*): void 
    + insertProduction(symbolsVN*, symbolsVT*, production*): void 在分析表中的某一行某一列插入一条产生式
    + getProduction(symbolsVN*, symbolsVT*): production* 获得某一行某一列的产生式，不存在为空
    + print(): void
}
symbolsVT <|- - symbols
symbolsVN <|- - symbols
symbols <- - production
symbolsVN <- - production
production <- - analysisTable
symbolsVT <- - analysisTable
symbolsVN <- - analysisTable
@enduml

PlantUML version 1.2020.08beta5(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 14.0.1+7
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>